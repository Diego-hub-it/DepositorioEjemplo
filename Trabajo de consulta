def integracion(f: Double => Double, a: Double, b: Double): Double = { //Se crea la funcion integracion
  val Simpson = (b-a)*(f(a)+4*f((a+b)/2)+f(b))/6
  Simpson
}
def f(x: Double): Double = -x*x+8*x-12//Se define la funcion a integrar
val a = 3// Límite inferior
val b = 5// Límite superior
val m = 10000000//Número de subdivisiones trapecio

val resultadoAprox = integracion(f, a, b)//Se obtiene el resultado del metodo Simpson

//Utilizaremos la regla del trapecio para la integral exacta
def integralExacta(a: Double, b: Double, m: Int, f: Double => Double): Double = {

  val h = (b - a) / m.toDouble//Calcula el tamalño de cada segmento

  val sumatoria = (1 until m).map(i => f(a + i * h)).sum

  (h / 2) * (f(a) + 2 * sumatoria + f(b))//Aplica el metodo del trapecio
}

val resultadoExacta = integralExacta(a, b, m, f)//Calculo de la integral exacta

def Error(resultE: Double, resultA: Double): Double = {//Funcion para calcular el error
  val error = resultE - resultA
  error
}
val error = Error(resultadoExacta,resultadoAprox).abs
